<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="Task 5.sql.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="618"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Pieces" custom_title="0" dock_id="1" table="4,6:mainPieces"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000010100ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Pieces" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="42"/><column index="2" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE Pieces (
 Code INTEGER NOT NULL,
 Name TEXT NOT NULL,
 PRIMARY KEY (Code)
 );

 CREATE TABLE Providers (
 Code VARCHAR(40) NOT NULL,  
 Name TEXT NOT NULL,
PRIMARY KEY (Code) 
 );

 CREATE TABLE Provides (
 Piece INTEGER, 
 Provider VARCHAR(40), 
 Price INTEGER NOT NULL,
 PRIMARY KEY(Piece, Provider) 
 );
</sql><sql name="SQL 2">INSERT INTO Providers(Code, Name) VALUES('HAL','Clarke Enterprises');
INSERT INTO Providers(Code, Name) VALUES('RBT','Susan Calvin Corp.');
INSERT INTO Providers(Code, Name) VALUES('TNBC','Skellington Supplies');

INSERT INTO Pieces(Code, Name) VALUES(1,'Sprocket');
INSERT INTO Pieces(Code, Name) VALUES(2,'Screw');
INSERT INTO Pieces(Code, Name) VALUES(3,'Nut');
INSERT INTO Pieces(Code, Name) VALUES(4,'Bolt');

INSERT INTO Provides(Piece, Provider, Price) VALUES(1,'HAL',10);
INSERT INTO Provides(Piece, Provider, Price) VALUES(1,'RBT',15);
INSERT INTO Provides(Piece, Provider, Price) VALUES(2,'HAL',20);
INSERT INTO Provides(Piece, Provider, Price) VALUES(2,'RBT',15);
INSERT INTO Provides(Piece, Provider, Price) VALUES(2,'TNBC',14);
INSERT INTO Provides(Piece, Provider, Price) VALUES(3,'RBT',50);
INSERT INTO Provides(Piece, Provider, Price) VALUES(3,'TNBC',45);
INSERT INTO Provides(Piece, Provider, Price) VALUES(4,'HAL',5);
INSERT INTO Provides(Piece, Provider, Price) VALUES(4,'RBT',7);
</sql><sql name="SQL 3*">-- 5.1 Select the name of all the pieces. 
SELECT *
FROM Pieces

SELECT *
FROM Provides
-- 5.2  Select all the providers' data. 
SELECT *
FROM Providers
-- 5.3 Obtain the average price of each piece (show only the piece code and the average price).
SELECT AVG(Price),  Piece
FROM Pieces
JOIN Provides  ON Pieces.Code=Provides.Piece
GROUP BY Code
-- 5.4  Obtain the names of all providers who supply piece 1.
SELECT Providers.Name, Provides.Piece
FROM Providers
JOIN Provides  ON Pieces.Code=Provides.Piece 
JOIN Providers ON Provides.Provider=Providers.Code
WHERE Providers.Piece = '1'
-- 5.5 Select the name of pieces provided by the provider with code &quot;HAL&quot;.
SELECT Provides.Provider,  Pieces.Name
FROM Pieces 
JOIN Provides  ON Pieces.Code=Provides.Piece 
WHERE Provides.Provider = 'HAL'
-- 5.6 Add an entry to the database to indicate that &quot;Skellington Supplies&quot; (code &quot;TNBC&quot;) will provide sprockets (code &quot;1&quot;) for 15 cents each.
INSERT INTO Provides (Piece, Provider, Price)
VALUES ('1', 'TNBC', '15')
-- 5.7 For each piece, find the most expensive offering of that piece and include the piece name, provider name, and price 
SELECT Provides.Piece, Provides.Provider, Provides.Price, Pieces.Name, Providers.Name
FROM Pieces 
JOIN Provides  ON Pieces.Code=Provides.Piece 
JOIN Providers ON Provides.Provider=Providers.Code
WHERE Price = (
    SELECT MAX(Price)
    FROM Pieces P2
    WHERE P1.Name = P2.Name
	) 
--(OPTIONAL: As there could be more than one provider who supply the same piece at the most expensive price, 
-- show all providers who supply at the most expensive price).
SELECT  Provides.Piece, Provides.Provider, Provides.Price, Providers.Name
FROM Pieces
JOIN Provides  ON Pieces.Code=Provides.Piece 
JOIN Providers ON Provides.Provider=Providers.Code
Where 
-- 5.8 Increase all prices by one cent.
UPDATE Provides
SET Price = Price + 1
-- 5.9 Update the database to reflect that &quot;Susan Calvin Corp.&quot; (code &quot;RBT&quot;) will not supply bolts (code 4).
DELETE 
FROM Provides 
WHERE Piece='4' AND Provider='RBT'
-- 5.10 Update the database to reflect that &quot;Susan Calvin Corp.&quot; (code &quot;RBT&quot;) will not supply any pieces (the provider should still remain in the database).
DELETE 
FROM Provides 
WHERE Provider='RBT' 

</sql><current_tab id="2"/></tab_sql></sqlb_project>
